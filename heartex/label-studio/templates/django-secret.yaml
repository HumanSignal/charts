{{- if and (not (hasKey .Values.global.extraEnvironmentSecrets "SECRET_KEY")) (not (hasKey .Values.global.extraEnvironmentVars "SECRET_KEY")) }}
{{- $djangoSecretName := printf "%s-%s" (include "ls-app.fullname" . ) "django-secret" -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $djangoSecretName }}
  annotations:
    "helm.sh/resource-policy": "keep"
  labels:
    {{- include "ls-secrets.labels" . | nindent 4 }}
type: Opaque
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $djangoSecretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- /* set $key to existing secret data or generate a random one when not exists*/}}
  {{- $djangoSecret := (get $secretData "key") | default (randAscii 50 | b64enc) }}
  key: {{ $djangoSecret | quote }}
{{- end }}
